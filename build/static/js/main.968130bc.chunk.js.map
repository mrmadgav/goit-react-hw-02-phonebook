{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Filter/Filter.module.css","redux/actions.js","redux/selectors.js","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","components/Phone/Phone.jsx","redux/reducer.js","redux/store.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addSucsess","createAction","getSucsess","deleteSuccess","onFilter","Axios","defaults","baseURL","allContacts","state","items","contactName","name","contactNumber","number","filterValue","filter","connect","contacts","deleteContact","id","dispatch","type","delete","then","payload","catch","error","props","onHandleDelete","e","target","className","styles","contactList","map","item","toLowerCase","includes","contactElem","deleteBtn","onClick","label","placeholder","onChange","value","input","ContactForm","this","handleSubmit","handleChange","onSubmit","formLabel","contactInput","required","contactAddBtn","Component","Phone","setState","preventDefault","some","i","alert","addContact","getContact","data","post","get","createReducer","parseInt","middleware","getDefaultMiddleware","store","next","action","console","group","info","groupEnd","configureStore","reducer","contactsReducer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.968130bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteBtn\":\"Contacts_deleteBtn__26V_A\",\"contactList\":\"Contacts_contactList__2Oo8h\",\"contactElem\":\"Contacts_contactElem__3A_-3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__6pZgT\",\"input\":\"Filter_input__j2lUZ\"};","import { createAction } from \"@reduxjs/toolkit\";\r\nimport Axios from \"axios\";\r\n\r\nexport const addSucsess = createAction(\"contacts/addSucsess\");\r\nexport const getSucsess = createAction(\"contacts/getSucsess\");\r\nexport const deleteSuccess = createAction(\"contacts/deleteSuccess\");\r\nexport const onFilter = createAction(\"phone/filter\");\r\n\r\nAxios.defaults.baseURL = \"http://localhost:3004\";\r\n\r\nexport const addContact = (data) => (dispatch) => {\r\n  dispatch({ type: \"contacts/addRequest\" });\r\n\r\n  Axios.post(\"/contacts\", data)\r\n    .then(({ data }) =>\r\n      dispatch({ type: \"contacts/addSucsess\", payload: data })\r\n    )\r\n    .catch((error) => dispatch({ type: \"contacts/addError\", payload: error }));\r\n};\r\n\r\nexport const getContact = () => (dispatch) => {\r\n  dispatch({ type: \"contacts/getRequest\" });\r\n\r\n  Axios.get(\"/contacts\")\r\n    .then(({ data }) =>\r\n      dispatch({ type: \"contacts/getSucsess\", payload: data })\r\n    )\r\n    .catch((error) => dispatch({ type: \"contacts/getError\", payload: error }));\r\n};\r\n\r\nexport const deleteContact = (id) => (dispatch) => {\r\n  dispatch({ type: \"contacts/deleteRequest\" });\r\n\r\n  Axios.delete(`/contacts/${id}`)\r\n    .then(() => dispatch({ type: \"contacts/deleteSuccess\", payload: id }))\r\n    .catch((error) =>\r\n      dispatch({ type: \"contacts/deleteError\", payload: error })\r\n    );\r\n};\r\n","// import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const allContacts = (state) => state.items;\r\nexport const contactName = (state) => state.items.name;\r\nexport const contactNumber = (state) => state.items.number;\r\nexport const filterValue = (state) => state.filter;\r\n\r\n// export const memoAllContacts = createSelector(\r\n//   allContacts,\r\n//   contactName,\r\n//   contactNumber,\r\n//   (contacts, name, number) => (contacts, name, number)\r\n// );\r\n\r\n// Все селекторы напрямую обращаются к состоянию...что тогда мемоизировать...\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/actions\";\r\nimport styles from \"./Contacts.module.css\";\r\nimport { allContacts, filterValue } from \"../../redux/selectors\";\r\n\r\nfunction Contacts(props) {\r\n  const { contacts, filter, deleteContact } = props;\r\n  const onHandleDelete = (e) => {\r\n    deleteContact(e.target.id);\r\n  };\r\n  return (\r\n    <div>\r\n      {\r\n        <ul className={styles.contactList}>\r\n          {contacts.map((item) => {\r\n            if (item.name.toLowerCase().includes(filter.toLowerCase())) {\r\n              return (\r\n                <li className={styles.contactElem} key={item.id}>\r\n                  {item.name}: {item.number}\r\n                  <button\r\n                    id={item.id}\r\n                    className={styles.deleteBtn}\r\n                    onClick={onHandleDelete}\r\n                  >\r\n                    delete\r\n                  </button>\r\n                </li>\r\n              );\r\n            } else {\r\n              return false;\r\n            }\r\n          })}\r\n        </ul>\r\n      }\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: allContacts(state),\r\n    filter: filterValue(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { deleteContact })(Contacts);\r\n","import React from \"react\";\r\nimport { onFilter } from \"../../redux/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport styles from \"./Filter.module.css\";\r\nimport { filterValue } from \"../../redux/selectors\";\r\n\r\nfunction Filter(props) {\r\n  const { onFilter } = props;\r\n  const onHandleFilter = (e) => {\r\n    onFilter(e.target.value);\r\n  };\r\n  return (\r\n    <label className={styles.label}>\r\n      Find Contacts by name\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"найти контакт\"\r\n        onChange={onHandleFilter}\r\n        className={styles.input}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    filter: filterValue(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onFilter })(Filter);\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  render() {\r\n    const {\r\n      name,\r\n      number,\r\n      handleSubmit,\r\n      handleChange,\r\n    } = this.props;\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <label className={styles.formLabel}>\r\n          Name\r\n          <input\r\n            name='name'\r\n            type=\"text\"\r\n            placeholder=\"Ilon Mask\"\r\n            value={name}\r\n            onChange={handleChange}\r\n            className={styles.contactInput}\r\n            required\r\n          />\r\n        </label>\r\n        <label className={styles.formLabel}>\r\n          Phone Number\r\n          <input\r\n            name='number'\r\n            type=\"tel\"\r\n            placeholder=\"777-888-99-00\"\r\n            // pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{2}-[0-9]{2}\"\r\n            value={number}\r\n            onChange={handleChange}\r\n            className={styles.contactInput}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={styles.contactAddBtn}>\r\n          add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React, { Component } from \"react\";\r\nimport Contacts from \"../Contacts/Contacts\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport ContactForm from \"../../components/ContactForm/ContactForm\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact, getContact } from \"../../redux/actions\";\r\nimport { allContacts, contactName, contactNumber } from \"../../redux/selectors\";\r\n\r\nclass Phone extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getContact();\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!this.props.contacts.some((i) => i.name === this.state.name)) {\r\n      this.props.addContact({\r\n        name: this.state.name,\r\n        number: this.state.number,\r\n      });\r\n    } else {\r\n      alert(`${this.state.name} уже есть в списке`);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Phone Book</h1>\r\n        <ContactForm\r\n          name={this.state.name}\r\n          number={this.state.number}\r\n          handleChange={this.handleChange}\r\n          handleSubmit={this.handleSubmit}\r\n        />\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        <Contacts />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    name: contactName(state),\r\n    number: contactNumber(state),\r\n    contacts: allContacts(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addContact, getContact })(Phone);\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addSucsess, getSucsess, deleteSuccess, onFilter } from \"./actions\";\r\n\r\nconst state = {\r\n  contacts: {\r\n    items: [],\r\n    filter: \"\",\r\n  },\r\n};\r\n\r\nexport default createReducer(state.contacts, {\r\n  [getSucsess]: (state, { payload }) => ({\r\n    ...state,\r\n    items: [...state.items, ...payload],\r\n  }),\r\n  [addSucsess]: (state, { payload }) => ({\r\n    ...state,\r\n    items: [\r\n      ...state.items,\r\n      {\r\n        name: payload.name,\r\n        number: payload.number,\r\n        id: payload.id,\r\n      },\r\n    ],\r\n  }),\r\n  [deleteSuccess]: (state, { payload }) => ({\r\n    ...state,\r\n    items: [...state.items.filter((i) => i.id !== parseInt(payload))],\r\n  }),\r\n  [onFilter]: (state, { payload }) => ({\r\n    ...state,\r\n    filter: payload,\r\n  }),\r\n});\r\n","import contactsReducer from \"./reducer\";\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\n\r\nconst loggerMiddleware = (store) => (next) => (action) => {\r\n  console.group(action.type);\r\n  console.info(\"dispatching\", action);\r\n  console.groupEnd(action.type);\r\n  return next(action);\r\n};\r\n\r\nconst middleware = [...getDefaultMiddleware({}), loggerMiddleware];\r\n\r\nconst store = configureStore({\r\n  reducer: contactsReducer,\r\n  middleware,\r\n});\r\nexport default store;\r\n","import React from \"react\";\r\nimport \"modern-normalize/modern-normalize.css\";\r\nimport Phone from \"./components/Phone/Phone.jsx\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Provider store={store}>\r\n        <Phone />\r\n      </Provider>\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n// import store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLabel\":\"ContactForm_formLabel__IFDx6\",\"contactInput\":\"ContactForm_contactInput__3p629\",\"contactAddBtn\":\"ContactForm_contactAddBtn__3RkSO\"};"],"sourceRoot":""}